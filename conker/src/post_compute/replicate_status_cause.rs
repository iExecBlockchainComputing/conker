use std::fmt::{Display, Formatter};

#[derive(Debug)]
pub enum ReplicateStatusCause {
    POST_COMPUTE_IMAGE_MISSING,
    POST_COMPUTE_TASK_ID_MISSING,        // exit 3
    POST_COMPUTE_EXIT_REPORTING_FAILED,  // exit 2
    POST_COMPUTE_WORKER_ADDRESS_MISSING, //exit 1 (known)
    POST_COMPUTE_TEE_CHALLENGE_PRIVATE_KEY_MISSING,
    POST_COMPUTE_ENCRYPTION_PUBLIC_KEY_MISSING,
    POST_COMPUTE_STORAGE_TOKEN_MISSING,
    POST_COMPUTE_COMPUTED_FILE_NOT_FOUND,
    POST_COMPUTE_RESULT_DIGEST_COMPUTATION_FAILED,
    POST_COMPUTE_OUT_FOLDER_ZIP_FAILED,
    POST_COMPUTE_TOO_LONG_RESULT_FILE_NAME,
    POST_COMPUTE_ENCRYPTION_FAILED,
    POST_COMPUTE_RESULT_FILE_NOT_FOUND,
    POST_COMPUTE_DROPBOX_UPLOAD_FAILED,
    POST_COMPUTE_IPFS_UPLOAD_FAILED,
    POST_COMPUTE_INVALID_TEE_SIGNATURE,
    POST_COMPUTE_SEND_COMPUTED_FILE_FAILED,
    POST_COMPUTE_TIMEOUT,
    POST_COMPUTE_FAILED_UNKNOWN_ISSUE, //exit 1 (unknown)
}

impl Display for ReplicateStatusCause {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        write!(f, "{:?}", self)
    }
}
